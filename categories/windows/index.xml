<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windows on SerializingMe</title>
    <link>https://www.serializing.me/categories/windows/</link>
    <description>Recent content in Windows on SerializingMe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sun, 29 Mar 2020 14:50:00 +0000</lastBuildDate><atom:link href="https://www.serializing.me/categories/windows/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bypass All The GPOs</title>
      <link>https://www.serializing.me/2020/03/29/bypass-all-the-gpos/</link>
      <pubDate>Sun, 29 Mar 2020 14:50:00 +0000</pubDate>
      
      <guid>https://www.serializing.me/2020/03/29/bypass-all-the-gpos/</guid>
      <description>&lt;p&gt;During a red team engagement, one has landed on a machine with the need to make an application &amp;ldquo;ignore&amp;rdquo; Group Policies enforced configurations. This application runs on the context of the user but the settings are only changeable with administrative privileges and without access to a highly privileged account how can one make the application ignore these settings?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>It&#39;s Me, FireEye!</title>
      <link>https://www.serializing.me/2019/02/27/its-me-fireeye/</link>
      <pubDate>Wed, 27 Feb 2019 12:00:00 +0000</pubDate>
      
      <guid>https://www.serializing.me/2019/02/27/its-me-fireeye/</guid>
      <description>&lt;p&gt;A little over three years ago, while researching malware execution &lt;a href=&#34;https://www.serializing.me/project/emofishes/&#34; title=&#34;Emofishes Project&#34;&gt;sandboxes&lt;/a&gt;, I found a stealth way to detect FireEye&amp;rsquo;s Malware Analysis System (MAS). In this blog post I will release the details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PowaScripts Update: Kerberos Pre-authentication</title>
      <link>https://www.serializing.me/2017/01/22/powascripts-update-kerberos-pre-authentication/</link>
      <pubDate>Sun, 22 Jan 2017 09:55:00 +0000</pubDate>
      
      <guid>https://www.serializing.me/2017/01/22/powascripts-update-kerberos-pre-authentication/</guid>
      <description>&lt;p&gt;After reading &lt;a href=&#34;https://twitter.com/harmj0y&#34; title=&#34;harmj0y Twiter Profile&#34;&gt;harmj0y&lt;/a&gt; blog post about &lt;a href=&#34;http://www.harmj0y.net/blog/activedirectory/roasting-as-reps/&#34; title=&#34;harmj0y Blog Post&#34;&gt;&amp;ldquo;Roasting AS-REPs&amp;rdquo;&lt;/a&gt;, I have decided to update the &lt;code&gt;Dump-User.ps1&lt;/code&gt; script in order for it to report on users that don&amp;rsquo;t have Kerberos pre-authentication enabled. Running the updated version against a &amp;ldquo;in the wild&amp;rdquo; target yielded interesting results to say the least.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AnyConnect Elevation of Privileges, Part 2</title>
      <link>https://www.serializing.me/2016/12/20/anyconnect-elevation-of-privileges-part-2/</link>
      <pubDate>Tue, 20 Dec 2016 18:28:00 +0000</pubDate>
      
      <guid>https://www.serializing.me/2016/12/20/anyconnect-elevation-of-privileges-part-2/</guid>
      <description>&lt;p&gt;In the &lt;a href=&#34;https://www.serializing.me/2016/12/14/anyconnect-elevation-of-privileges-part-1/&#34; title=&#34;AnyConnect Elevation of Privileges, Part 1&#34;&gt;previous&lt;/a&gt; part of this multi-part article, I explained how I reversed engineered one of the binaries of the Cisco AnyConnect (CAC) Secure Mobility Client. This allowed me to understand the header format of the network packets used in the Inter-Process Communication (IPC) mechanism. In this part, I will focus on doing a more dynamic analysis in order to understand what goes in the packet body.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AnyConnect Elevation of Privileges, Part 1</title>
      <link>https://www.serializing.me/2016/12/14/anyconnect-elevation-of-privileges-part-1/</link>
      <pubDate>Wed, 14 Dec 2016 18:56:17 +0000</pubDate>
      
      <guid>https://www.serializing.me/2016/12/14/anyconnect-elevation-of-privileges-part-1/</guid>
      <description>&lt;p&gt;The Cisco AnyConnect (CAC) Secure Mobility Client doesn&amp;rsquo;t have the brightest security track record. &lt;a href=&#34;https://tools.cisco.com/security/center/viewAlert.x?alertId=39466&#34; title=&#34;CVE-2015-4211&#34;&gt;CVE-2015-4211&lt;/a&gt; and &lt;a href=&#34;https://tools.cisco.com/security/center/viewAlert.x?alertId=41136&#34; title=&#34;CVE-2015-6305&#34;&gt;CVE-2015-6305&lt;/a&gt; are only two out of the fourteen CVEs that have been assigned to it just in 2015. This spiked my curiosity and prompted me to confirm if Cisco had properly fixed the underlying issue of these vulnerabilities.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HPQPswd Encrypted Passwords Decryption</title>
      <link>https://www.serializing.me/2016/10/15/hpqpswd-encrypted-passwords-decryption/</link>
      <pubDate>Sat, 15 Oct 2016 19:00:00 +0000</pubDate>
      
      <guid>https://www.serializing.me/2016/10/15/hpqpswd-encrypted-passwords-decryption/</guid>
      <description>&lt;p&gt;Ever wondered how to decrypt HPQPswd encrypted passwords? So did I when, for the first time, I came across a strange file called &lt;code&gt;password.bin&lt;/code&gt; with a magic value of &lt;code&gt;_HPPW12_&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Active Directory Dump</title>
      <link>https://www.serializing.me/2016/10/07/active-directory-dump/</link>
      <pubDate>Fri, 07 Oct 2016 18:05:00 +0000</pubDate>
      
      <guid>https://www.serializing.me/2016/10/07/active-directory-dump/</guid>
      <description>&lt;p&gt;During many penetration tests (or red versus blue team exercises), I have found myself with the need to investigate users, groups, computers and policies of a Windows domain. To do that, I have developed a series of PowerShell scripts that dump all that information from Active Directory into XML files.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Updated AppLocker Dump Script</title>
      <link>https://www.serializing.me/2016/09/23/updated-applocker-dump-script/</link>
      <pubDate>Fri, 23 Sep 2016 20:33:00 +0000</pubDate>
      
      <guid>https://www.serializing.me/2016/09/23/updated-applocker-dump-script/</guid>
      <description>&lt;p&gt;I have created a new version of &lt;a href=&#34;https://www.serializing.me/2015/11/01/inspecting-applocker-policy/&#34; title=&#34;Older Version&#34;&gt;this&lt;/a&gt; script so that it is better aligned with the conventions I use for other PowerShell scripts.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Titan Quest Invincibility Cheat</title>
      <link>https://www.serializing.me/2016/01/23/titan-quest-invincibility-cheat/</link>
      <pubDate>Sat, 23 Jan 2016 22:19:09 +0000</pubDate>
      
      <guid>https://www.serializing.me/2016/01/23/titan-quest-invincibility-cheat/</guid>
      <description>&lt;p&gt;In the last level of Titan Quest, every player will have to face the titan Typhon, Bane of the Gods. A task that is very far from easy&amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Inspecting AppLocker Policy</title>
      <link>https://www.serializing.me/2015/11/01/inspecting-applocker-policy/</link>
      <pubDate>Sun, 01 Nov 2015 15:16:50 +0000</pubDate>
      
      <guid>https://www.serializing.me/2015/11/01/inspecting-applocker-policy/</guid>
      <description>&lt;p&gt;While doing incident response, if AppLocker is being used but the computer still got infected by a malicious executable, it is useful to know exactly what AppLocker policy is currently applied.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emotional Fishes are Emotional</title>
      <link>https://www.serializing.me/2015/06/26/emotional-fishes-are-emotional/</link>
      <pubDate>Fri, 26 Jun 2015 10:44:13 +0000</pubDate>
      
      <guid>https://www.serializing.me/2015/06/26/emotional-fishes-are-emotional/</guid>
      <description>&lt;p&gt;Following my research with &lt;a href=&#34;https://www.serializing.me/2015/05/28/a-paranoid-fish-and-silver-bullets/&#34; title=&#34;Blog Post&#34;&gt;Pafish&lt;/a&gt; and subsequent development of &lt;a href=&#34;https://www.serializing.me/2015/06/12/curious-fish-is-curious/&#34; title=&#34;Blog Post&#34;&gt;Cufish&lt;/a&gt;, I decided to create the &lt;a href=&#34;https://www.serializing.me/project/emofishes/&#34; title=&#34;Project Page&#34;&gt;Emofishes&lt;/a&gt; (Emotional Fishes) project.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Curious Fish is Curious</title>
      <link>https://www.serializing.me/2015/06/12/curious-fish-is-curious/</link>
      <pubDate>Fri, 12 Jun 2015 11:02:16 +0000</pubDate>
      
      <guid>https://www.serializing.me/2015/06/12/curious-fish-is-curious/</guid>
      <description>&lt;p&gt;Testing virtualized malware sandboxes with Paranoid Fish wasn&amp;rsquo;t enough, there might be other things that could be improved to avoid malware detection. Enter Curious Fish, a tool to help fingerprinting sandboxes.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A Paranoid Fish and Silver Bullets</title>
      <link>https://www.serializing.me/2015/05/28/a-paranoid-fish-and-silver-bullets/</link>
      <pubDate>Thu, 28 May 2015 22:24:56 +0000</pubDate>
      
      <guid>https://www.serializing.me/2015/05/28/a-paranoid-fish-and-silver-bullets/</guid>
      <description>&lt;p&gt;I have been doing some research (and development) around virtualized malware sandboxes, being the question, &amp;ldquo;how easy is for malware to detect such an environment&amp;rdquo; the most important one, I turned to a tool called Pafish (Paranoid Fish).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>&#34;Check my CV&#34;, Generating YARA Rules</title>
      <link>https://www.serializing.me/2015/05/03/check-my-cv-generating-yara-rules/</link>
      <pubDate>Sun, 03 May 2015 12:19:48 +0000</pubDate>
      
      <guid>https://www.serializing.me/2015/05/03/check-my-cv-generating-yara-rules/</guid>
      <description>&lt;p&gt;Recently, one e-Mail that was sent to one of my colleagues caught my attention. The message was quite believable but there were some little subtleties that gave it away. First step was to get the attachment out of the message and do an initial analysis.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
